<?xml version="1.0"?>
<!-- Function test suite -->
<stx:transform xmlns:stx="http://stx.sourceforge.net/2002/ns" version="1.0">

  <stx:template match="/">
    <stx:value-of select="concat('Hello', ', ', 'world&#xA;')" />
    <stx:value-of select="string-length(1234=5)" />, <!-- false -->
    <stx:value-of select="normalize-space('   x    y  &#9;     z ')" />,
    <stx:value-of select="string-length(normalize-space('  &#xA;   '))" />,
    <stx:value-of select="not(true() and false())" />,
    <stx:value-of select="not(true() or false())" />,
 starts-with
    <stx:value-of select="starts-with('abcd', 'ab')" />,
    <stx:value-of select="starts-with('abcd', 'abcd')" />,
    <stx:value-of select="starts-with('abcd', '')" />,
    <stx:value-of select="starts-with('abcd', 'xyz')" />,
    <stx:value-of select="starts-with('', 'xyz')" />,
    <stx:value-of select="starts-with('', '')" />,
 contains
    <stx:value-of select="contains('abcd','bc')" />,
    <stx:value-of select="contains('abcd','abcd')" />,
    <stx:value-of select="contains('abcd','')" />,
    <stx:value-of select="contains('','')" />,
    <stx:value-of select="contains('','x')" />,
 substring
    "<stx:value-of select="substring('abcde',1,1)" />"
    "<stx:value-of select="substring('abcde',1)" />"
    "<stx:value-of select="substring('abcde',2,3)" />"
    "<stx:value-of select="substring('abcde',6)" />"
    "<stx:value-of select="substring('abcde',-3)" />"
    "<stx:value-of select="substring('abcde',-3,5)" />"
    "<stx:value-of select="substring('abcde',1.7,1.3)" />"
    "<stx:value-of select="substring('abcde',1 div 0)" />"
    "<stx:value-of select="substring('abcde',3,0)" />"
    "<stx:value-of select="substring('abcde',3,5)" />"
    <stx:text>&#xA;</stx:text>
    <stx:process-children />
  </stx:template>

  <stx:variable name="n" />
  
  <stx:template match="node()">
    <stx:assign name="n" select="." />
    <stx:value-of select="concat(position(), ' ', name($n),' ')" />
    <stx:if test="local-name()">
      <stx:value-of select="concat('({', namespace-uri(.), '}, ',                             local-name(.), ')')" />
    </stx:if>
    <stx:if test="name()='' and normalize-space()=."> no whitespace!</stx:if>
    <stx:text>&#xA;</stx:text>
    <stx:if test="name()!=name(.) or local-name()!=local-name(.) or
                  namespace-uri()!=namespace-uri(.)">
      This should never be displayed!
    </stx:if>
    <stx:process-children />
  </stx:template>

  <stx:template match="text()" priority="-2" />
</stx:transform>
