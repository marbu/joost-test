<?xml version="1.0"?>
<stx:transform xmlns:stx="http://stx.sourceforge.net/2002/ns" version="1.0">

  <stx:variable name="empty" select="()" />
  <stx:variable name="seq1" select="(1,2,3)" />
  <stx:variable name="seq2" select="(5,6)" />
  <stx:variable name="seq3"
                select="(0, (), $seq1, (4, $seq2), ((7, 8), 9),
                       (: 9.5 :) (: a (: nested :) comment :) 10)" />

  
  <stx:template match="d">
    count(empty): <stx:value-of select="count($empty)" />
    count(seq1): <stx:value-of select="count($seq1)" />
    count(seq2): <stx:value-of select="count($seq2)" />
    count(seq3): <stx:value-of select="count($seq3)" />
    sum(seq3): <stx:value-of select="sum($seq3)" />
    sum(empty): <stx:value-of select="sum($empty)" />
    sum(NaNs): <stx:value-of select="sum((1, 'NaN', 2))" />
    empty(empty): <stx:value-of select="empty($empty)" />
    empty(seq1): <stx:value-of select="empty($seq1)" />
    exists(empty): <stx:value-of select="exists($empty)" />
    exists(seq1): <stx:value-of select="exists($seq1)" />
    item-at(seq1,1): <stx:value-of select="item-at($seq1,1)" />
    count(item-at(seq1,1)): <stx:value-of select="count(item-at($seq1,1))" />
    item-at(seq1,3): <stx:value-of select="item-at($seq1,3)" />
    item-at(empty,2): <stx:value-of select="item-at($empty,2)" />
    index-of(seq3,3): <stx:value-of select="index-of($seq3,3)" />
    index-of(seq3,35): <stx:value-of select="index-of($seq3,35)" />
    index-of((3,seq3,'3'),3): <stx:value-of select="index-of((3,$seq3,'3'),3)" />
    index-of(empty,3): <stx:value-of select="index-of($empty,3)" />
    index-of(seq3,empty): <stx:value-of select="index-of($seq3,$empty)" />
    count(subsequence(seq3,3,5)): <stx:value-of select="count(subsequence($seq3,3,5))" />
    sum(subsequence(seq3,3,5)): <stx:value-of select="sum(subsequence($seq3,3,5))" />
    count(subsequence(seq3,1,1)): <stx:value-of select="count(subsequence($seq3,1,1))" />
    count(subsequence(seq3,2,1)): <stx:value-of select="count(subsequence($seq3,2,1))" />
    count(subsequence(seq3,3,1)): <stx:value-of select="count(subsequence($seq3,3,1))" />
    count(subsequence(seq3,2,0)): <stx:value-of select="count(subsequence($seq3,2,0))" />
    count(subsequence(seq3,2,-1)): <stx:value-of select="count(subsequence($seq3,2,-1))" />
    count(subsequence(seq3,8,5)): <stx:value-of select="count(subsequence($seq3,8,5))" />
    count(subsequence(seq3,-2,5)): <stx:value-of select="count(subsequence($seq3,-2,5))" />
    count(subsequence(seq3,1)): <stx:value-of select="count(subsequence($seq3,1))" />
    count(subsequence(seq3,8)): <stx:value-of select="count(subsequence($seq3,8))" />
    count(subsequence(seq3,0)): <stx:value-of select="count(subsequence($seq3,0))" />
    count(subsequence(seq3,-2)): <stx:value-of select="count(subsequence($seq3,-2))" />
    count(subsequence(seq3,20)): <stx:value-of select="count(subsequence($seq3,20))" />
    insert-before(seq3,0,(99,88)): <stx:value-of select="insert-before($seq3,0,(99,88))" />
    insert-before(seq3,1,(99,88)): <stx:value-of select="insert-before($seq3,1,(99,88))" />
    insert-before(seq3,2,(99,88)): <stx:value-of select="insert-before($seq3,2,(99,88))" />
    insert-before(seq3,9,(99,88)): <stx:value-of select="insert-before($seq3,9,(99,88))" />
    insert-before(seq3,20,(99,88)): <stx:value-of select="insert-before($seq3,20,(99,88))" />
    insert-before(empty,20,(99,88)): <stx:value-of select="insert-before($empty,20,(99,88))" />
    insert-before(seq3,20,empty): <stx:value-of select="insert-before($seq3,20,$empty)" />
    remove(seq3,0): <stx:value-of select="remove($seq3,0)" />
    remove(seq3,1): <stx:value-of select="remove($seq3,1)" />
    remove(seq3,7): <stx:value-of select="remove($seq3,7)" />
    remove(seq3,200): <stx:value-of select="remove($seq3,200)" />
    remove(empty,20): <stx:value-of select="remove($empty,20)" />
    remove(1,1): <stx:value-of select="remove(1,1)" />
    string-join(seq3,'--'): <stx:value-of select="string-join($seq3,'--')" />
    string-join(seq3,''): <stx:value-of select="string-join($seq3,'')" />
    string-join(empty,'--'): <stx:value-of select="string-join($empty,'--')" />
    empty=empty: <stx:value-of select="$empty = $empty" />
    empty!=empty: <stx:value-of select="$empty != $empty" />
    empty='': <stx:value-of select="$empty=''" />
    string(empty)='': <stx:value-of select="string($empty)=''" />
    number(empty): <stx:value-of select="number($empty)" />
    boolean(empty): <stx:value-of select="boolean($empty)" />
    boolean(seq1): <stx:value-of select="boolean($seq1)" />
    boolean(seq3): <stx:value-of select="boolean($seq3)" />
    seq1=seq2: <stx:value-of select="$seq1 = $seq2" />
    seq2=seq3: <stx:value-of select="$seq2 = $seq3" />
    seq2!=seq3: <stx:value-of select="$seq2 != $seq3" />
    seq2!=seq2: <stx:value-of select="$seq2 != $seq2" />
    seq2+seq3: <stx:value-of select="$seq2 + $seq3" />
    seq2+empty: <stx:value-of select="$seq2 + $empty" />
    empty+seq3: <stx:value-of select="$empty + $seq3" />
    count(seq2+seq3): <stx:value-of select="count($seq2 + $seq3)" />

    count(//*/@*): <stx:value-of select="count(//*/@*)" />
    sum(//*/@*): <stx:value-of select="sum(//*/@*)" />
    count(//*/@bar): <stx:value-of select="count(//*/@bar)" />
    sum(//*/@bar): <stx:value-of select="sum(//*/@bar)" />

    min(//*/@bar): <stx:value-of select="min(//*/@bar)" />
    min(//*/@baz): <stx:value-of select="min(//*/@baz)" />
    min((3,'foo')): <stx:value-of select="min((3,'foo'))" />
    max(//*/@bar): <stx:value-of select="max(//*/@bar)" />
    max(//*/@baz): <stx:value-of select="max(//*/@baz)" />
    max((3,'foo')): <stx:value-of select="max((3,'foo'))" />
    avg((//*/@foo,//*/@bar)): <stx:value-of select="avg((//*/@foo,//*/@bar))" />
    avg(//*/@baz): <stx:value-of select="avg(//*/@baz)" />
    avg(('bar','baz')): <stx:value-of select="avg(('bar','baz'))" />
    avg((3,'foo')): <stx:value-of select="avg((3,'foo'))" />
    
    value-of seq3: (<stx:value-of select="$seq3" />)
    value-of seq3 with |: (<stx:value-of select="$seq3"
                                separator="{translate(name(/*),'a','|')}" />)
    value-of seq3 with : (<stx:value-of select="$seq3" separator="" />)
    value-of empty: (<stx:value-of select="$empty" />)
    value-of empty with |: (<stx:value-of select="$empty" separator="|" />)
    value-of 42 with |: (<stx:value-of select="42" separator="|" />)
  </stx:template>

</stx:transform>
