<?xml version="1.0"?>
<!-- variable test suite -->
<stx:transform xmlns:stx="http://temporary.uri/2002/stx"
               xmlns:bar="http://bar" version="1.0">

  <stx:variable name="foo" select="1" />
  <stx:variable name="bar:foo" select="2" />
  <stx:variable name="bar" select="$foo + $bar:foo" />
  <stx:variable name="or:and" select="4.e-4 * $bar" xmlns:or="http://or" />

  <stx:variable name="text" />
  <stx:variable name="pi" />
  <stx:variable name="comment" />

  <stx:variable name="null1" select="." />
  <stx:variable name="null2" select="@foo" />
  <stx:variable name="null3" select=".." />
  
  <stx:template match="/">
    <stx:value-of select="concat('foo=', $foo, '&#xA;')" />
    <stx:text />bar:foo=<stx:value-of select="$bar:foo" />
    <stx:text>&#xA;</stx:text>
    <stx:text />bar=<stx:value-of select="$bar" />
    <stx:text>&#xA;</stx:text>
    <stx:value-of select="concat('oder:and=', $oder:and, '&#xA;')"
                  xmlns:oder="http://or" />
    <stx:assign name="bar" select="1" />
    <stx:process-children />
    <stx:text />bar=<stx:value-of select="$bar" />
    <stx:text> (nodes in the document)&#xA;</stx:text>
    <stx:text />Comment: `<stx:value-of select="$comment" />'
PI: `<stx:value-of select="$pi" />'
Text: `<stx:value-of select="$text" />'
  </stx:template>

  <stx:template match="text()">
    <stx:assign name="text" select="." />
    <stx:assign name="bar" select="$bar+1" />
  </stx:template>

  <stx:template match="comment()">
    <stx:assign name="comment" select="." />
    <stx:assign name="bar" select="$bar+1" />
  </stx:template>

  <stx:template match="processing-instruction()">
    <stx:assign name="pi" select="." />
    <stx:assign name="bar" select="$bar+1" />
  </stx:template>
  
  <stx:template match="node()" priority="-1">
    <stx:assign name="bar" select="$bar+1" />
    <stx:process-children />
  </stx:template>
</stx:transform>
