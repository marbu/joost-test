<?xml version="1.0"?>
<!--
 | $Id: utm.stx,v 1.4 2003/04/30 15:26:46 obecker Exp $
 |
 | The contents of this file are subject to the Mozilla Public License
 | Version 1.1 (the "License"); you may not use this file except in
 | compliance with the License. You may obtain a copy of the License at
 | http://www.mozilla.org/MPL/
 |
 | Software distributed under the License is distributed on an "AS IS" basis,
 | WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 | for the specific language governing rights and limitations under the
 | License.
 |
 | The Original Code is: this file
 |
 | The Initial Developer of the Original Code is Oliver Becker.
 |
 | Portions created by  ______________________
 | are Copyright (C) ______ _______________________.
 | All Rights Reserved.
 |
 | Contributor(s): ______________________________________.
 +-->
<!--
 | This STX transformation runs the Turing machine (TM) that is 
 | specified by the source document. The initial tape for the 
 | Turing machine is specified by a global parameter named 'tape'.
 | (Thus, this STX transformation is a Universal Turing Machine.)
 |
 | The source document, which specifies a Turing machine, 
 | is an XML document that conforms to the 
 | Turing Machine Markup Language (TMML), see
 | http://www.unidex.com/turing/tmml.htm
 +-->
<stx:transform xmlns:stx="http://stx.sourceforge.net/2002/ns"
               version="1.0"
               pass-through="none" strip-space="yes">

  <!-- initial tape (input) -->
  <stx:param name="tape" />
  <!-- you could use
       select="199" for add_one_tm.xml
       select="'aabbaa'" for string_length_tm.xml
       select="'fgk vf ghevat pbzcyrgr$'" for rot13_tm.xml -->

  <!-- initial position on the tape -->
  <stx:variable name="pos" select="1" />

  <!-- the set of known symbols -->
  <stx:variable name="symbols" />
  
  <!-- the current symbol -->
  <stx:variable name="symbol" select="substring($tape,$pos,1)" />

  <!-- the blank symbol -->
  <stx:variable name="blank" select="' '" />

  <!-- the current state of the turing machine -->
  <stx:variable name="state" />

  
  <!-- a mode replacement for STX: store, process, halt -->
  <stx:variable name="mode" />

  <!-- a buffer which contains the nodes of our turing machine -->  
  <stx:buffer name="turing" />


  
  <!-- ************************* init ************************* -->
  
  <stx:template match="turing-machine">
    <stx:assign name="mode" select="'store'" />
    <stx:result-buffer name="turing">
      <turing>
        <stx:process-children />
      </turing>
    </stx:result-buffer>
    <stx:assign name="mode" select="'process'" />
    <stx:if test="$tape=''">
      <stx:text>Missing input tape&#xA;</stx:text>
      <stx:assign name="mode" select="'halt'" />
    </stx:if>
    <stx:process-buffer name="turing" />
  </stx:template>

  
  
  <!-- *********************** storing ************************ -->

  <stx:template match="symbols[$mode='store']">
    <stx:assign name="symbols" select="." />
    <stx:if test="@blank-symbol">
      <stx:assign name="blank" select="@blank-symbol" />
    </stx:if>
  </stx:template>

  
  <stx:template match="state[$mode='store']">
    <stx:copy attributes="@*">
      <stx:value-of select="." />
    </stx:copy>
    <stx:if test="@start='yes'">
      <stx:assign name="state" select="." />
    </stx:if>
  </stx:template>

  
  <stx:template match="node()[$mode='store']" priority="-2">
    <stx:copy attributes="@*">
      <stx:process-children />
    </stx:copy>
  </stx:template>

  

  <!-- ********************** processing ********************** -->

  <!-- indicates whether the next state of the TM has been found -->
  <stx:variable name="found" select="'done'" />

  <stx:template match="turing[$mode='process']">
    <!-- test for error conditions -->
    <stx:if test="not(contains($symbols,$symbol)) and $symbol != $blank">
      <stx:text>Found unknown symbol: "</stx:text>
      <stx:value-of select="$symbol" />
      <stx:text>"&#xA;</stx:text>
      <stx:assign name="mode" select="'halt'" />
    </stx:if>
    <stx:if test="$found!='done'">
      <stx:text>No action found for symbol "</stx:text>
      <stx:value-of select="$symbol" />
      <stx:text>" and state "</stx:text>
      <stx:value-of select="$state" />
      <stx:text>"&#xA;</stx:text>
      <stx:assign name="mode" select="'halt'" />
    </stx:if>

    <stx:assign name="found" select="'no'" />
    <stx:process-children />

    <!-- next round -->
    <stx:process-buffer name="turing" />
  </stx:template>

  
  <stx:template match="state[$mode='process']">
    <stx:if test=".=$state and @halt='yes'">
      <stx:assign name="mode" select="'halt'" />
    </stx:if>
  </stx:template>

  
  <stx:template match="mapping[$mode='process']">
    <stx:if test="$found='no'">
      <stx:process-children />
    </stx:if>
  </stx:template>

  
  <stx:template match="from[$mode='process' and 
                            @current-state=$state and
                            @current-symbol=$symbol]">
    <stx:assign name="found" select="'yes'" />
  </stx:template>

  
  <stx:template match="to[$mode='process' and $found='yes']">
    <stx:assign name="state" select="@next-state" />
    <stx:assign name="tape" select="concat(substring($tape,1,$pos - 1),
                                             @next-symbol,
                                             substring($tape,$pos + 1))" />
    <stx:if test="@movement='right'">
      <stx:assign name="pos" select="$pos + 1" />
      <stx:assign name="symbol" select="substring($tape,$pos,1)" />
      <stx:if test="$symbol = ''">
        <stx:assign name="symbol" select="$blank" />
        <stx:assign name="tape" select="concat($tape, $blank)" />
      </stx:if>
    </stx:if>
    <stx:if test="@movement='left'">
      <stx:assign name="pos" select="$pos - 1" />
      <stx:assign name="symbol" select="substring($tape,$pos,1)" />
      <stx:if test="$symbol = ''">
        <stx:assign name="symbol" select="$blank" />
        <stx:assign name="pos" select="1" />
        <stx:assign name="tape" select="concat($blank,$tape)" />
      </stx:if>
      <stx:if test="$pos &lt; 1">
      </stx:if>
    </stx:if>
    <stx:assign name="found" select="'done'" />
  </stx:template>

  

  <!-- ************************* halt ************************* -->

  <stx:template match="turing[$mode='halt']">
    <stx:value-of select="concat('Result: ', $tape,'&#xA;')" />
  </stx:template>

</stx:transform>

